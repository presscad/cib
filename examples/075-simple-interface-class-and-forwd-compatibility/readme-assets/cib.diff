--- ../060-simple-interface-class/cib/example.h.cpp
+++ cib/example.h.cpp
@@ -20,10 +20,15 @@
   Interface(__zz_cib_PROXY* proxy, const __zz_cib_MethodTable* mtbl)
     : ::Interface::Interface()
     , __zz_cib_proxy(proxy)
     , __zz_cib_mtbl_helper(mtbl)
   {}
+  int Gunc() override {
+    using GuncProc = int (__zz_cib_decl *) (__zz_cib_PROXY*);
+    return __zz_cib_get_mtable_helper().invoke<GuncProc, __zz_cib_GenericProxy::__zz_cib_methodid::Gunc>(
+      __zz_cib_proxy);
+  }
   int Func() override {
     using FuncProc = int (__zz_cib_decl *) (__zz_cib_PROXY*);
     return __zz_cib_get_mtable_helper().invoke<FuncProc, __zz_cib_GenericProxy::__zz_cib_methodid::Func>(
       __zz_cib_proxy);
   }
@@ -40,10 +45,13 @@
 namespace __zz_cib_Delegator {
 using __zz_cib_Delegatee = __zz_cib_::Interface::__zz_cib_GenericProxy::Interface;
 static ::Interface* __zz_cib_decl __zz_cib_new(__zz_cib_PROXY* proxy, const __zz_cib_MethodTable* mtbl) {
   return new __zz_cib_::Interface::__zz_cib_GenericProxy::Interface(proxy, mtbl);
 }
+static int __zz_cib_decl Gunc(__zz_cib_Delegatee* __zz_cib_obj) {
+  return __zz_cib_obj->Gunc();
+}
 static int __zz_cib_decl Func(__zz_cib_Delegatee* __zz_cib_obj) {
   return __zz_cib_obj->Func();
 }
 static void __zz_cib_decl __zz_cib_delete(__zz_cib_Delegatee* __zz_cib_obj) {
   delete __zz_cib_obj;
@@ -60,13 +68,14 @@
 const __zz_cib_MethodTable* __zz_cib_GetMethodTable() {
   static const __zz_cib_MTableEntry methodArray[] = {
     reinterpret_cast<__zz_cib_MTableEntry> (&__zz_cib_Delegator::__zz_cib_new),
     reinterpret_cast<__zz_cib_MTableEntry> (&__zz_cib_Delegator::Func),
     reinterpret_cast<__zz_cib_MTableEntry> (&__zz_cib_Delegator::__zz_cib_delete),
-    reinterpret_cast<__zz_cib_MTableEntry> (&__zz_cib_Delegator::__zz_cib_release_proxy)
+    reinterpret_cast<__zz_cib_MTableEntry> (&__zz_cib_Delegator::__zz_cib_release_proxy),
+    reinterpret_cast<__zz_cib_MTableEntry> (&__zz_cib_Delegator::Gunc)
   };
-  static const __zz_cib_MethodTable methodTable = { methodArray, 4 };
+  static const __zz_cib_MethodTable methodTable = { methodArray, 5 };
   return &methodTable;
 }
 }}
 namespace __zz_cib_ { namespace A {
 namespace __zz_cib_Delegator {
